generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(cuid())
  role  Role    @default(BUYER)
  name  String?
  email String  @unique
  phone String?

  // Relations
  listings        Listing[]
  messages        Message[]
  threadsAsBuyer  Thread[]  @relation("BuyerThreads")
  threadsAsSeller Thread[]  @relation("SellerThreads")

  createdAt DateTime @default(now())
}

model Listing {
  id          String      @id @default(cuid())
  title       String
  type        ListingType
  widthM      Float?
  lengthM     Float?
  landSizeSqm Int?
  priceMin    Int?
  priceMax    Int?
  province    String
  district    String
  photos      String[]
  description String?
  status      Status      @default(PENDING)

  // Owner
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  // Back-relation to threads
  threads Thread[] @relation("ListingThreads")

  createdAt DateTime @default(now())
}

model Thread {
  id String @id @default(cuid())

  // Buyer side (named relation)
  buyer   User   @relation("BuyerThreads", fields: [buyerId], references: [id])
  buyerId String

  // Seller side (named relation)
  seller   User   @relation("SellerThreads", fields: [sellerId], references: [id])
  sellerId String

  // Listing side (named relation)
  listing   Listing @relation("ListingThreads", fields: [listingId], references: [id])
  listingId String

  messages      Message[]
  lastMessageAt DateTime?
  createdAt     DateTime  @default(now())
}

model Message {
  id        String   @id @default(cuid())
  thread    Thread   @relation(fields: [threadId], references: [id])
  threadId  String
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String
  text      String
  createdAt DateTime @default(now())
}

enum Role {
  BUYER
  SELLER
  ADMIN
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum ListingType {
  LAND
  HOUSE
  SERVICE
}
